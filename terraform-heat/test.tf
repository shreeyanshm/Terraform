terraform {
  required_version = ">=1.10.0"

  required_providers {
    openstack = {
      source  = "terraform-provider-openstack/openstack"
      version = "~>3.3"
    }
  }
}

resource "openstack_orchestration_stack_v1" "tf_stack_341" {
  name = "tf-stack-341"

  parameters = {
    key_name="shreeyansh"
  }
  template_opts = {
  Bin = "heat_template_version: 2015-04-30\ndescription: Multi-master Kubernetes cluster via explicit masters & workers\nparameters:\n  key_name:\n    type: string\n    description: SSH key name\n  image:\n    type: string\n    description: Image to use to create volumes\n    default: Ubuntu-20.04\n  flavor:\n    type: string\n    description: Flavor for VMs\n    default: S.4\n  external_network:\n    type: string\n    description: External network for router and floating IPs\n    default: External_Net_MUM\n  volume_size:\n    type: number\n    default: 30\n    description: Size of each Cinder volume (GB)\n\nresources:\n  test-341-heat-net:\n    type: OS::Neutron::Net\n    properties:\n      name: test-341-heat-net\n  test-341-heat-subnet:\n    type: OS::Neutron::Subnet\n    depends_on: [test-341-heat-net]\n    properties:\n      name: test-341-heat-subnet\n      network_id: { get_resource: test-341-heat-net }\n      cidr: \"192.168.20.0/24\"\n      dns_nameservers: [ \"8.8.8.8\", \"8.8.4.4\" ]\n      ip_version: 4\n\n  test-341-heat-router:\n    type: OS::Neutron::Router\n    depends_on: [test-341-heat-subnet]\n    properties:\n      name: test-341-heat-router\n      external_gateway_info:\n        network: { get_param: external_network }\n\n  test-341-heat-router-interface:\n    type: OS::Neutron::RouterInterface\n    depends_on: [test-341-heat-subnet, test-341-heat-router]\n    properties:\n      router_id: { get_resource: test-341-heat-router }\n      subnet: { get_resource: test-341-heat-subnet }\n\n  test-341-heat-sec-grp:\n    type: OS::Neutron::SecurityGroup\n    properties:\n      name: test-341-heat-sec-grp\n      description: Allow SSH and HTTP\n      rules:\n        - protocol: tcp\n          port_range_min: 80\n          port_range_max: 80\n          remote_ip_prefix: 0.0.0.0/0\n        - protocol: tcp\n          remote_ip_prefix: 0.0.0.0/0\n          port_range_min: 22\n          port_range_max: 22\n\n        - direction: ingress\n          protocol: icmp\n          remote_ip_prefix: 0.0.0.0/0\n  test-341-heat-sec-grp-master-nodes:\n    type: OS::Neutron::SecurityGroup\n    properties:\n      name: test-341-heat-sec-grp-master-nodes\n      description: Allow Kubernetes master nodes ports and web/SSH access\n      rules:\n        - protocol: tcp\n          remote_ip_prefix: 0.0.0.0/0\n          port_range_min: 6443\n          port_range_max: 6443\n        - protocol: tcp\n          remote_ip_prefix: 0.0.0.0/0\n          port_range_min: 10250\n          port_range_max: 10250\n        - protocol: tcp\n          remote_ip_prefix: 0.0.0.0/0\n          port_range_min: 10259\n          port_range_max: 10259\n        - protocol: tcp\n          remote_ip_prefix: 0.0.0.0/0\n          port_range_min: 10257\n          port_range_max: 10257\n        - protocol: tcp\n          remote_ip_prefix: 0.0.0.0/0\n          port_range_min: 2380\n          port_range_max: 2739 \n         \n\n  calico-341-sec-grp:\n    type: OS::Neutron::SecurityGroup\n    properties:\n      name: calico-341-sec-grp\n      description: Allow Calico ports\n      rules:\n        - protocol: tcp\n          remote_ip_prefix: 0.0.0.0/0\n          port_range_min: 179\n          port_range_max: 179  \n        - protocol: 4\n          remote_ip_prefix: 0.0.0.0/0\n        - protocol: udp\n          remote_ip_prefix: 0.0.0.0/0\n          port_range_min: 4789\n          port_range_max: 4789  \n        - protocol: tcp\n          remote_ip_prefix: 0.0.0.0/0\n          port_range_min: 5473\n          port_range_max: 5473  \n        - protocol: udp\n          remote_ip_prefix: 0.0.0.0/0\n          port_range_min: 51820\n          port_range_max: 51820 \n        - protocol: udp\n          remote_ip_prefix: 0.0.0.0/0\n          port_range_min: 51821\n          port_range_max: 51821  \n        - protocol: tcp\n          remote_ip_prefix: 0.0.0.0/0\n          port_range_min: 443\n          port_range_max: 443  \n        - protocol: tcp\n          remote_ip_prefix: 0.0.0.0/0\n          port_range_min: 6443\n          port_range_max: 6443 \n        - protocol: tcp\n          remote_ip_prefix: 0.0.0.0/0\n          port_range_min: 2379\n          port_range_max: 2379 \n\n  test-341-heat-sec-grp-worker-nodes:\n    type: OS::Neutron::SecurityGroup\n    properties:\n      name: test-341-heat-sec-grp-worker-nodes\n      description: Allow Kubernetes worker nodes ports and web/SSH access\n      rules:\n        - protocol: tcp\n          remote_ip_prefix: 0.0.0.0/0\n          port_range_min: 10256\n          port_range_max: 10256\n        - protocol: tcp\n          remote_ip_prefix: 0.0.0.0/0\n          port_range_min: 10250\n          port_range_max: 10250\n        - protocol: tcp\n          remote_ip_prefix: 0.0.0.0/0\n          port_range_min: 30000\n          port_range_max: 32767\n        - protocol: udp\n          remote_ip_prefix: 0.0.0.0/0\n          port_range_min: 30000\n          port_range_max: 32767\n    \n  test-341-heat-sec-grp-lb:\n    type: OS::Neutron::SecurityGroup\n    properties:\n      name: test-341-heat-sec-grp-lb\n      description: Allow traffic to Kubernetes API on 6443 and outbound to anywhere\n      rules:\n        - protocol: tcp\n          port_range_min: 6443\n          port_range_max: 6443\n          remote_ip_prefix: 0.0.0.0/0\n          direction: ingress\n\n        - direction: egress\n          ethertype: IPv4\n        - direction: egress\n          ethertype: IPv6\n\n        - direction: ingress\n          protocol: icmp\n          remote_ip_prefix: 0.0.0.0/0\n\n  test-341-heat-jumpinstance-vol:\n    type: OS::Cinder::Volume\n    properties:\n      name: test-341-heat-jumpinstance-vol\n      size: {get_param: volume_size}\n      image: {get_param: image}\n\n  instance_port-jump-instance:\n    type: OS::Neutron::Port\n    depends_on: [test-341-heat-net, test-341-heat-subnet, test-341-heat-sec-grp-worker-nodes, calico-341-sec-grp, test-341-heat-sec-grp, test-341-heat-sec-grp-master-nodes]\n    properties:\n      network: {get_resource: test-341-heat-net}\n      security_groups:\n        - { get_resource: test-341-heat-sec-grp }\n        - { get_resource: test-341-heat-sec-grp-lb }\n        - { get_resource: test-341-heat-sec-grp-worker-nodes }\n        - { get_resource: test-341-heat-sec-grp-master-nodes }\n        - { get_resource: calico-341-sec-grp}\n      fixed_ips:\n        - subnet_id: {get_resource: test-341-heat-subnet}\n\n  test-341-heat-jump-instance:\n    type: OS::Nova::Server\n    depends_on: [test-341-heat-jumpinstance-vol, test-341-heat-net, instance_port-jump-instance]\n    properties:\n      name: jump-instance-341\n      flavor: {get_param : flavor}\n      key_name: {get_param: key_name}\n      networks:\n        - port: { get_resource: instance_port-jump-instance }\n      block_device_mapping:\n        - device_name: vda\n          volume_id: { get_resource: test-341-heat-jumpinstance-vol }\n          delete_on_termination: true\n\n  test-341-heat-master-vol1:\n    type: OS::Cinder::Volume\n    properties:\n      name: test-341-heat-master-vol1\n      size: {get_param: volume_size}\n      image: {get_param: image}\n\n  instance_port-master1:\n    type: OS::Neutron::Port\n    depends_on: [test-341-heat-net, test-341-heat-subnet, test-341-heat-sec-grp, test-341-heat-sec-grp-master-nodes, calico-341-sec-grp]\n    properties:\n      network: {get_resource: test-341-heat-net}\n      security_groups:\n        - { get_resource: test-341-heat-sec-grp }\n        - { get_resource: test-341-heat-sec-grp-master-nodes }\n        - { get_resource: calico-341-sec-grp }\n      fixed_ips:\n        - subnet_id: {get_resource: test-341-heat-subnet}\n\n  test-341-heat-master-node1:\n    type: OS::Nova::Server\n    depends_on: [test-341-heat-master-vol1, test-341-heat-net, instance_port-master1]\n    properties:\n      name: test-341-heat-master-node1\n      flavor: {get_param : flavor}\n      key_name: {get_param: key_name}\n      networks:\n        - port: { get_resource: instance_port-master1 }\n      block_device_mapping:\n        - device_name: vda\n          volume_id: { get_resource: test-341-heat-master-vol1 }\n          delete_on_termination: true\n\n  test-341-heat-master-vol2:\n    type: OS::Cinder::Volume\n    properties:\n      name: test-341-heat-master-vol2\n      size: {get_param: volume_size}\n      image: {get_param: image}\n\n  instance_port-master2:\n    type: OS::Neutron::Port\n    depends_on: [test-341-heat-net, test-341-heat-subnet, test-341-heat-sec-grp, test-341-heat-sec-grp-master-nodes, calico-341-sec-grp]\n    properties:\n      network: {get_resource: test-341-heat-net}\n      security_groups:\n        - { get_resource: test-341-heat-sec-grp }\n        - { get_resource: test-341-heat-sec-grp-master-nodes }\n        - { get_resource: calico-341-sec-grp }\n      fixed_ips:\n        - subnet_id: {get_resource: test-341-heat-subnet}\n\n  test-341-heat-master-node2:\n    type: OS::Nova::Server\n    depends_on: [test-341-heat-master-vol2, test-341-heat-net, instance_port-master2]\n    properties:\n      name: test-341-heat-master-node2\n      flavor: {get_param : flavor}\n      key_name: {get_param: key_name}\n      networks:\n        - port: { get_resource: instance_port-master2 }\n      block_device_mapping:\n        - device_name: vda\n          volume_id: { get_resource: test-341-heat-master-vol2 }\n          delete_on_termination: true\n\n  test-341-heat-master-vol3:\n    type: OS::Cinder::Volume\n    properties:\n      name: test-341-heat-master-vol3\n      size: {get_param: volume_size}\n      image: {get_param: image}\n\n  instance_port-master3:\n    type: OS::Neutron::Port\n    depends_on: [test-341-heat-net, test-341-heat-subnet, test-341-heat-sec-grp, test-341-heat-sec-grp-master-nodes, calico-341-sec-grp]\n    properties:\n      network: {get_resource: test-341-heat-net}\n      security_groups:\n        - { get_resource: test-341-heat-sec-grp }\n        - { get_resource: test-341-heat-sec-grp-master-nodes }\n        - { get_resource: calico-341-sec-grp }\n      fixed_ips:\n        - subnet_id: {get_resource: test-341-heat-subnet}\n\n  test-341-heat-master-node3:\n    type: OS::Nova::Server\n    depends_on: [test-341-heat-master-vol3, test-341-heat-net, instance_port-master3]\n    properties:\n      name: test-341-heat-master-node3\n      flavor: {get_param : flavor}\n      key_name: {get_param: key_name}\n      networks:\n        - port: { get_resource: instance_port-master3 }\n      block_device_mapping:\n        - device_name: vda\n          volume_id: { get_resource: test-341-heat-master-vol3 }\n          delete_on_termination: true\n\n  test-341-heat-worker-vol1:\n    type: OS::Cinder::Volume\n    properties:\n      name: test-341-heat-worker-vol1\n      size: {get_param: volume_size}\n      image: {get_param: image}\n\n  instance_port-worker1:\n    type: OS::Neutron::Port\n    depends_on: [test-341-heat-net, test-341-heat-subnet, test-341-heat-sec-grp, test-341-heat-sec-grp-worker-nodes, calico-341-sec-grp]\n    properties:\n      network: {get_resource: test-341-heat-net}\n      security_groups:\n        - { get_resource: test-341-heat-sec-grp }\n        - { get_resource: test-341-heat-sec-grp-worker-nodes }\n        - { get_resource: calico-341-sec-grp }\n      fixed_ips:\n        - subnet_id: {get_resource: test-341-heat-subnet}\n\n  test-341-heat-worker-node1:\n    type: OS::Nova::Server\n    depends_on: [test-341-heat-worker-vol1, test-341-heat-net, instance_port-worker1]\n    properties:\n      name: test-341-heat-worker-node1\n      flavor: {get_param : flavor}\n      key_name: {get_param: key_name}\n      networks:\n        - port: { get_resource: instance_port-worker1 }\n      block_device_mapping:\n        - device_name: vda\n          volume_id: { get_resource: test-341-heat-worker-vol1 }\n          delete_on_termination: true\n\n  floating_ip-jump-instance:\n    type: OS::Neutron::FloatingIP\n    properties:\n      floating_network: {get_param: external_network}\n\n  association-jump-instance:\n    type: OS::Neutron::FloatingIPAssociation\n    depends_on: [floating_ip-jump-instance, test-341-heat-net, instance_port-jump-instance, test-341-heat-jump-instance]\n    properties:\n      floatingip_id: { get_resource: floating_ip-jump-instance }\n      port_id: { get_resource: instance_port-jump-instance }\n\n\noutputs:\n  jump-instance-341_floating_ip:\n    description: Floating IP of Jump Instance \n    value: { get_attr: [floating_ip-jump-instance, floating_ip_address] }\n\n  master1_ip:\n    description: Master1 private IP\n    value: {get_attr: [test-341-heat-master-node1, first_address]}\n\n  master2_ip:\n    description: Master2 private IP\n    value: {get_attr: [test-341-heat-master-node2, first_address]}\n    \n  master3_ip:\n    description: Master3 private IP\n    value: {get_attr: [test-341-heat-master-node3, first_address]}\n\n  worker1_ip:\n    description: Worker1 private IP\n    value: {get_attr: [test-341-heat-worker-node1, first_address]}"
  }
  environment_opts = {
	Bin = "\n"
  }
  disable_rollback = true
  timeout = 30
}
